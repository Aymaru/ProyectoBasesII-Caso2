version: '3'

#Definicion de la red
              
services: 
  
  #Mongod instances (Shards)
  mongo_shard_1:
    container_name: berlin
    image: mongo:latest
    networks:
      amarsnet:
        ipv4_address: 10.0.0.3 #172.16.0.3
    command: mongod --shardsvr --replSet "rs_germany" --dbpath /data/db --port 27018 --bind_ip 127.0.0.1,10.0.0.3 #172.16.0.3
    ports:
      - 27018:27017
    environment:
      TERM: xterm
    #volumes:
     # - /etc/localtime:/etc/localtime:ro
      #- /amarson_mongo_cluster/data1:/data/db
      
  mongo_shard_2:
    container_name: madrid
    image: mongo:latest
    command: mongod --shardsvr --replSet "rs_spain" --dbpath /data/db --port 27019 --bind_ip localhost,10.0.0.4 #--bind_ip 127.0.0.1,10.0.0.4 #172.16.0.4
    ports:
      - 27019:27017
    environment:
      TERM: xterm
    #volumes:
     # - /etc/localtime:/etc/localtime:ro
      #- /amarson_mongo_cluster/data2:/data/db
    networks:
      amarsnet:
        ipv4_address: 10.0.0.4 #172.16.0.4
      
  mongo_shard_3:
    container_name: tokio
    image: mongo:latest
    command: mongod --shardsvr --replSet "rs_japan" --dbpath /data/db --port 27020 --bind_ip localhost,10.0.0.5 #--bind_ip 127.0.0.1,10.0.0.5 #172.16.0.5
    ports:
      - 27020:27017
    environment:
      TERM: xterm 
    #volumes:
     # - /etc/localtime:/etc/localtime:ro
      #- /amarson_mongo_cluster/data3:/data/db
    networks:
      amarsnet:
        ipv4_address: 10.0.0.5 #172.16.0.5

  
 #Config Server      
  mongo_config_1:
    container_name: rome
    image: mongo:latest
    command: mongod --configsvr --replSet "rs_italy" --dbpath /data/configdb --port 27017 #--bind_ip  127.0.0.1,10.0.0.2 #172.16.0.2
    #command: 'mongo /bin/bash --eval "rs.initiate( { _id : rs-italy , configsvr: true,members: [{ _id : 0, host : "mongo_config_1/:27017" }]}) | mongo"'
    ports:
      - 27017:27017
    environment:
      TERM: xterm
    #volumes:
     # - /etc/localtime:/etc/localtime:ro
     # - /mongo_cluster/config1:/data/configdb 
    networks:
      amarsnet:
        ipv4_address: 10.0.0.2 #172.16.0.2

 #Mongos instance (Router)
  mongo_router_1:
    container_name: washington
    image: mongo:latest
    networks:
      amarsnet:
        ipv4_address: 10.0.0.6 #172.16.0.6
    command: mongos --port 27021 --configdb rs_italy/rome:27017 --bind_ip localhost,10.0.0.6
    depends_on:
      - mongo_config_1    
        
    ports:
      - 27021:27017
    #volumes:
      #- /etc/localtime:/etc/localtime:ro


  redis:
    image: redis
    container_name: cache
    expose:
        - 6379
    ports:
        - 6379:6379
    networks:
      amarsnet:
        ipv4_address: 10.0.0.8 #172.16.0.6
   #node app
  app:
    build: ./
    volumes:
        - ./:/usr/src/app
    ports:
        - 3000:3000
    links:
        - redis
    depends_on:
        - mongo_router_1
    environment:
        - NODE_ENV=development
        - PORT=3000
        - REDIS_URL=redis://cache
        - DB_HOST=mongo_router_1://washington
        - DB_USER=mongo_router_1
    command:
        sh -c 'npm i && node app.js'
    networks:
      amarsnet:
        ipv4_address: 10.0.0.7 #172.16.0.6

networks:
    amarsnet:
        driver: bridge
        ipam:
            config:
                - subnet: 10.0.0.0/28
                #gateway: 10.0.0.1
                #- subnet: 172.16.0.0/24
                #gateway: 172.18.1.1